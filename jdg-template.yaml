apiVersion: v1
items:
- apiVersion: v1
  data:
    cloud.xml: |
      <?xml version="1.0" ?>

      <server xmlns="urn:jboss:domain:4.0">
          <extensions>
              <extension module="org.infinispan.extension"/>
              <extension module="org.infinispan.server.endpoint"/>
              <extension module="org.jboss.as.connector"/>
              <extension module="org.jboss.as.deployment-scanner"/>
              <extension module="org.jboss.as.jdr"/>
              <extension module="org.jboss.as.jmx"/>
              <extension module="org.jboss.as.logging"/>
              <extension module="org.jboss.as.naming"/>
              <extension module="org.jboss.as.remoting"/>
              <extension module="org.jboss.as.security"/>
              <extension module="org.jboss.as.transactions"/>
              <extension module="org.jgroups.extension"/>
              <extension module="org.wildfly.extension.io"/>
          </extensions>
          <management>
              <security-realms>
                  <security-realm name="ManagementRealm">
                      <authentication>
                          <local default-user="$local" skip-group-loading="true"/>
                          <properties path="mgmt-users.properties" relative-to="jboss.server.config.dir"/>
                      </authentication>
                      <authorization map-groups-to-roles="false">
                          <properties path="mgmt-groups.properties" relative-to="jboss.server.config.dir"/>
                      </authorization>
                  </security-realm>
                  <security-realm name="ApplicationRealm">
                      <authentication>
                          <local default-user="$local" allowed-users="*" skip-group-loading="true"/>
                          <properties path="application-users.properties" relative-to="jboss.server.config.dir"/>
                      </authentication>
                      <authorization>
                          <properties path="application-roles.properties" relative-to="jboss.server.config.dir"/>
                      </authorization>
                  </security-realm>
              </security-realms>
              <audit-log>
                  <formatters>
                      <json-formatter name="json-formatter"/>
                  </formatters>
                  <handlers>
                      <file-handler name="file" formatter="json-formatter" relative-to="jboss.server.data.dir" path="audit-log.log"/>
                  </handlers>
                  <logger log-boot="true" log-read-only="false" enabled="false">
                      <handlers>
                          <handler name="file"/>
                      </handlers>
                  </logger>
              </audit-log>
              <management-interfaces>
                  <http-interface http-upgrade-enabled="true">
                      <socket-binding http="management-http"/>
                  </http-interface>
              </management-interfaces>
              <access-control provider="simple">
                  <role-mapping>
                      <role name="SuperUser">
                          <include>
                              <user name="$local"/>
                          </include>
                      </role>
                  </role-mapping>
              </access-control>
          </management>
          <profile>
              <subsystem xmlns="urn:jboss:domain:logging:3.0">
                  <console-handler name="CONSOLE">
                      <level name="INFO"/>
                      <formatter>
                          <named-formatter name="COLOR-PATTERN"/>
                      </formatter>
                  </console-handler>
                  <periodic-rotating-file-handler name="FILE" autoflush="true">
                      <formatter>
                          <named-formatter name="PATTERN"/>
                      </formatter>
                      <file relative-to="jboss.server.log.dir" path="server.log"/>
                      <suffix value=".yyyy-MM-dd"/>
                      <append value="true"/>
                  </periodic-rotating-file-handler>
                  <size-rotating-file-handler name="HR-ACCESS-FILE" autoflush="true">
                      <formatter>
                          <pattern-formatter pattern="(%t) %s%e%n"/>
                      </formatter>
                      <file relative-to="jboss.server.log.dir" path="hotrod-access.log"/>
                      <append value="true"/>
                      <rotate-size value="10M"/>
                      <max-backup-index value="10"/>
                  </size-rotating-file-handler>
                  <size-rotating-file-handler name="REST-ACCESS-FILE" autoflush="true">
                      <formatter>
                          <pattern-formatter pattern="(%t) %s%e%n"/>
                      </formatter>
                      <file relative-to="jboss.server.log.dir" path="rest-access.log"/>
                      <append value="true"/>
                      <rotate-size value="10M"/>
                      <max-backup-index value="10"/>
                  </size-rotating-file-handler>
                  <logger category="com.arjuna">
                      <level name="WARN"/>
                  </logger>
                  <logger category="org.jboss.as.config">
                      <level name="DEBUG"/>
                  </logger>
                  <logger category="sun.rmi">
                      <level name="WARN"/>
                  </logger>
                  <logger category="org.infinispan.server.hotrod.logging.HotRodAccessLoggingHandler">
                      <!-- Set to TRACE to enable access logging for hot rod or use DMR -->
                      <level name="INFO"/>
                      <handlers>
                          <handler name="HR-ACCESS-FILE"/>
                      </handlers>
                  </logger>
                  <logger category="RestAccessLoggingHandler">
                      <!-- Set to TRACE to enable access logging for rest or use DMR -->
                      <level name="INFO"/>
                      <handlers>
                          <handler name="REST-ACCESS-FILE"/>
                      </handlers>
                  </logger>
                  <root-logger>
                      <level name="INFO"/>
                      <handlers>
                          <handler name="CONSOLE"/>
                          <handler name="FILE"/>
                      </handlers>
                  </root-logger>
                  <formatter name="PATTERN">
                      <pattern-formatter pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"/>
                  </formatter>
                  <formatter name="COLOR-PATTERN">
                      <pattern-formatter pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"/>
                  </formatter>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:deployment-scanner:2.0">
                  <deployment-scanner path="deployments" relative-to="jboss.server.base.dir" scan-interval="5000" runtime-failure-causes-rollback="${jboss.deployment.scanner.rollback.on.failure:false}"/>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:datasources:4.0">
                  <datasources>
                      <datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true">
                          <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url>
                          <driver>h2</driver>
                          <security>
                              <user-name>sa</user-name>
                              <password>sa</password>
                          </security>
                      </datasource>
                      <drivers>
                          <driver name="h2" module="com.h2database.h2">
                              <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>
                          </driver>
                      </drivers>
                  </datasources>
              </subsystem>
              <subsystem xmlns="urn:infinispan:server:core:8.4" default-cache-container="clustered">
                  <cache-container name="clustered" default-cache="default" statistics="true">
                      <transport lock-timeout="60000" />
                      <global-state/>
                      <distributed-cache-configuration name="transactional">
                          <transaction mode="NON_XA" locking="PESSIMISTIC"/>
                      </distributed-cache-configuration>
                      <distributed-cache-configuration name="async" mode="ASYNC"/>
                      <replicated-cache-configuration name="replicated"/>
                      <distributed-cache-configuration name="persistent-file-store">
                          <file-store shared="false" fetch-state="true" passivation="false"/>
                      </distributed-cache-configuration>
                      <distributed-cache-configuration name="indexed">
                          <indexing index="LOCAL" auto-config="true"/>
                      </distributed-cache-configuration>
                      <distributed-cache-configuration name="memory-bounded">
                          <eviction strategy="LRU" size="10000000" type="MEMORY"/>
                      </distributed-cache-configuration>
                      <distributed-cache-configuration name="persistent-file-store-passivation">
                          <eviction strategy="LRU" size="10000"/>
                          <file-store shared="false" fetch-state="true" passivation="true">
                              <write-behind modification-queue-size="1024" thread-pool-size="1"/>
                          </file-store>
                      </distributed-cache-configuration>
                      <distributed-cache-configuration name="persistent-file-store-write-behind">
                          <file-store shared="false" fetch-state="true" passivation="false">
                              <write-behind modification-queue-size="1024" thread-pool-size="1"/>
                          </file-store>
                      </distributed-cache-configuration>
                      <distributed-cache-configuration name="persistent-leveldb-store">
                          <leveldb-store shared="false" fetch-state="true" passivation="false"/>
                      </distributed-cache-configuration>
                      <distributed-cache-configuration name="persistent-jdbc-string-keyed">
                          <string-keyed-jdbc-store datasource="java:jboss/datasources/ExampleDS" fetch-state="true" preload="false" purge="false" shared="false" passivation="false">
                              <string-keyed-table prefix="ISPN">
                                  <id-column name="id" type="VARCHAR"/>
                                  <data-column name="datum" type="BINARY"/>
                                  <timestamp-column name="version" type="BIGINT"/>
                              </string-keyed-table>
                              <write-behind modification-queue-size="1024" thread-pool-size="1"/>
                          </string-keyed-jdbc-store>
                      </distributed-cache-configuration>
                      <distributed-cache-configuration name="persistent-jdbc-binary-keyed">
                          <binary-keyed-jdbc-store datasource="java:jboss/datasources/ExampleDS" fetch-state="true" preload="true" purge="false" shared="false" passivation="false">
                              <binary-keyed-table prefix="ISPN">
                                  <id-column name="id" type="VARCHAR"/>
                                  <data-column name="datum" type="BINARY"/>
                                  <timestamp-column name="version" type="BIGINT"/>
                              </binary-keyed-table>
                          </binary-keyed-jdbc-store>
                      </distributed-cache-configuration>
                      <distributed-cache name="default">
                          <backups>
                              <backup site="gcp2" strategy="ASYNC" />
                           </backups>
                      </distributed-cache>
                      <replicated-cache name="repl" configuration="replicated"/>
                      <distributed-cache name="memcachedCache"/>
                  </cache-container>
              </subsystem>
              <subsystem xmlns="urn:infinispan:server:endpoint:8.1">
                  <hotrod-connector socket-binding="hotrod" cache-container="clustered">
                      <topology-state-transfer lazy-retrieval="false" lock-timeout="1000" replication-timeout="5000"/>
                  </hotrod-connector>
                  <memcached-connector socket-binding="memcached" cache-container="clustered"/>
                  <rest-connector socket-binding="rest" cache-container="clustered">
                  </rest-connector>
              </subsystem>
              <subsystem xmlns="urn:infinispan:server:jgroups:8.0">
                  <channels default="cluster">
                      <channel name="cluster"/>
                      <channel name="global" stack="relay-global"/>
                  </channels>
                  <stacks default="${jboss.default.jgroups.stack:kubernetes}">
                      <stack name="relay-global">
                          <transport type="TCP" socket-binding="jgroups-tcp-relay">
                              <property name="external_addr">${jboss.bind.address:127.0.0.1}</property>
                          </transport>
                          <protocol type="TCPPING">
                              <property name="initial_hosts">${jboss.bind.address:127.0.0.1}[55200]</property>
                          </protocol>
                          <protocol type="MERGE3"/>
                          <protocol type="FD_SOCK" socket-binding="jgroups-tcp-fd">
                              <property name="external_addr">${jboss.bind.address:127.0.0.1}</property>
                          </protocol>
                          <protocol type="FD_ALL"/>
                          <protocol type="VERIFY_SUSPECT"/>
                          <protocol type="pbcast.NAKACK2">
                              <property name="use_mcast_xmit">false</property>
                          </protocol>
                          <protocol type="UNICAST3"/>
                          <protocol type="pbcast.STABLE"/>
                          <protocol type="pbcast.GMS"/>
                          <protocol type="MFC"/>
                      </stack>
                      <stack name="kubernetes">
                          <transport type="TCP" socket-binding="jgroups-tcp"/>
                          <protocol type="openshift.DNS_PING" socket-binding="jgroups-mping"/>
                          <protocol type="MERGE3"/>
                          <protocol type="FD_SOCK" socket-binding="jgroups-tcp-fd"/>
                          <protocol type="FD_ALL"/>
                          <protocol type="VERIFY_SUSPECT"/>
                          <protocol type="pbcast.NAKACK2">
                              <property name="use_mcast_xmit">false</property>
                          </protocol>
                          <protocol type="UNICAST3"/>
                          <protocol type="pbcast.STABLE"/>
                          <protocol type="pbcast.GMS"/>
                          <protocol type="MFC"/>
                          <protocol type="FRAG3"/>
                          <relay site="gcp1">
                              <remote-site name="gcp2" stack="relay-global" cluster="global"/>
                              <property name="relay_multicasts">false</property>
                          </relay>
                      </stack>
                  </stacks>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:io:1.1">
                  <worker name="default"/>
                  <buffer-pool name="default"/>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:jca:4.0">
                  <archive-validation enabled="true" fail-on-error="true" fail-on-warn="false"/>
                  <bean-validation enabled="true"/>
                  <default-workmanager>
                      <short-running-threads>
                          <core-threads count="50"/>
                          <queue-length count="50"/>
                          <max-threads count="50"/>
                          <keepalive-time time="10" unit="seconds"/>
                      </short-running-threads>
                      <long-running-threads>
                          <core-threads count="50"/>
                          <queue-length count="50"/>
                          <max-threads count="50"/>
                          <keepalive-time time="10" unit="seconds"/>
                      </long-running-threads>
                  </default-workmanager>
                  <cached-connection-manager/>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:jdr:1.0"/>
              <subsystem xmlns="urn:jboss:domain:jmx:1.3">
                  <expose-resolved-model/>
                  <expose-expression-model/>
                  <remoting-connector/>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:naming:2.0">
                  <remote-naming/>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:remoting:3.0">
                  <endpoint/>
                  <http-connector name="http-remoting-connector" connector-ref="default" security-realm="ApplicationRealm"/>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:security:1.2">
                  <security-domains>
                      <security-domain name="other" cache-type="default">
                          <authentication>
                              <login-module code="Remoting" flag="optional">
                                  <module-option name="password-stacking" value="useFirstPass"/>
                              </login-module>
                              <login-module code="RealmDirect" flag="required">
                                  <module-option name="password-stacking" value="useFirstPass"/>
                              </login-module>
                          </authentication>
                      </security-domain>
                      <security-domain name="jboss-web-policy" cache-type="default">
                          <authorization>
                              <policy-module code="Delegating" flag="required"/>
                          </authorization>
                      </security-domain>
                      <security-domain name="jboss-ejb-policy" cache-type="default">
                          <authorization>
                              <policy-module code="Delegating" flag="required"/>
                          </authorization>
                      </security-domain>
                      <security-domain name="jaspitest" cache-type="default">
                          <authentication-jaspi>
                              <login-module-stack name="dummy">
                                  <login-module code="Dummy" flag="optional"/>
                              </login-module-stack>
                              <auth-module code="Dummy"/>
                          </authentication-jaspi>
                      </security-domain>
                  </security-domains>
              </subsystem>
              <subsystem xmlns="urn:jboss:domain:transactions:3.0">
                  <core-environment>
                      <process-id>
                          <uuid/>
                      </process-id>
                  </core-environment>
                  <recovery-environment socket-binding="txn-recovery-environment" status-socket-binding="txn-status-manager"/>
              </subsystem>
          </profile>
          <interfaces>
              <interface name="management">
                  <inet-address value="${jboss.bind.address.management:127.0.0.1}"/>
              </interface>
              <interface name="public">
                  <inet-address value="${jboss.bind.address:127.0.0.1}"/>
              </interface>
          </interfaces>
          <socket-binding-group name="standard-sockets" default-interface="public" port-offset="${jboss.socket.binding.port-offset:0}">
              <socket-binding name="management-http" interface="management" port="${jboss.management.http.port:9990}"/>
              <socket-binding name="management-https" interface="management" port="${jboss.management.https.port:9993}"/>
              <socket-binding name="hotrod" port="11222"/>
              <socket-binding name="hotrod-internal" port="11223"/>
              <socket-binding name="jgroups-mping" port="0" multicast-address="${jboss.default.multicast.address:234.99.54.14}" multicast-port="45700"/>
              <socket-binding name="jgroups-tcp" port="7600"/>
              <socket-binding name="jgroups-tcp-fd" port="57600"/>
              <socket-binding name="jgroups-tcp-relay" port="55200" />
              <socket-binding name="memcached" port="11211"/>
              <socket-binding name="rest" port="8080"/>
              <socket-binding name="rest-multi-tenancy" port="8081"/>
              <socket-binding name="rest-ssl" port="8443"/>
              <socket-binding name="txn-recovery-environment" port="4712"/>
              <socket-binding name="txn-status-manager" port="4713"/>
              <outbound-socket-binding name="remote-store-hotrod-server">
                  <remote-destination host="remote-host" port="11222"/>
              </outbound-socket-binding>
              <outbound-socket-binding name="remote-store-rest-server">
                  <remote-destination host="remote-host" port="8080"/>
              </outbound-socket-binding>
          </socket-binding-group>
      </server>
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      template: jdg
    name: jdg-app-configuration
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Headless service for StatefulSets
    labels:
      application: jdg-app
      template: jdg
    name: jdg-app-headless
  spec:
    clusterIP: None
    ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: hotrod
      port: 11222
      targetPort: 11222
    selector:
      deploymentConfig: jdg-app
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The JGroups ping port for clustering.
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      application: jdg-app
      template: jdg
    name: jdg-app-ping
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
    selector:
      deploymentConfig: jdg-app
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's HTTP port.
    labels:
      application: jdg-app
      template: jdg
    name: jdg-app-http
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: jdg-app
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Hot Rod's port.
    labels:
      application: jdg-app
      template: jdg
    name: jdg-app-hotrod
  spec:
    ports:
    - port: 11222
      targetPort: 11222
    selector:
      deploymentConfig: jdg-app
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: x-site replication endpoint
    labels:
      application: jdg-app
      template: jdg
    name: jdg-app-x-site
  spec:
    ports:
    - port: 55200
      targetPort: 55200
    selector:
      deploymentConfig: jdg-app
    type: LoadBalancer
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    labels:
      application: jdg-app
      template: jdg
    name: jdg-app
  spec:
    replicas: 1
    serviceName: jdg-app-headless
    strategy:
      rollingParams:
        intervalSeconds: 20
        maxSurge: 1
        maxUnavailable: 1
        timeoutSeconds: 1200
        updatePeriodSeconds: 20
      type: Rolling
    template:
      metadata:
        labels:
          application: jdg-app
          deploymentConfig: jdg-app
        name: jdg-app
      spec:
        containers:
        - args:
          - /opt/datagrid/bin/standalone.sh
          - -c
          - custom/cloud.xml
          - -b
          - $(IP)
          - -Djboss.default.jgroups.stack=kubernetes
          env:
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: jdg-app-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: "8888"
          - name: IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          image: registry.access.redhat.com/jboss-datagrid-7/datagrid71-openshift
          livenessProbe:
            exec:
              command:
              - /opt/datagrid/bin/livenessProbe.sh
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          name: jdg-app
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          - containerPort: 11222
            name: hotrod
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /opt/datagrid/bin/readinessProbe.sh
            failureThreshold: 5
            initialDelaySeconds: 17
            periodSeconds: 20
            successThreshold: 2
            timeoutSeconds: 10
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: "0.5"
              memory: 512Mi
          volumeMounts:
          - mountPath: /opt/datagrid/standalone/configuration/custom
            name: jdg-app-configuration
        terminationGracePeriodSeconds: 180
        volumes:
        - configMap:
            name: jdg-app-configuration
          name: jdg-app-configuration
    triggers:
    - type: ConfigChange
kind: List
metadata: {}
